
fontend 
    framework: reactjs, html, css
    package:
                npm install react-router-dom
                npm install axios
    language: javascript  
    lệnh:
        - khởi tạo :             npx create-react-app frontend
        - truy cập vào frontend: cd frontend
        - Khởi chạy :            npm start
    Struct:
        frontend/
            ├──node_modules/
            ├── public/
            │   ├── logo.svg
            │   ├── index.html                      
            │   └── manifest.json
            ├── src/
            │   ├── assets/
            │   ├── components/
            │   │   ├──ui/
            │   │   ├──layout/
            │   │   ├──hooks/
            │   │   └──utils/
            │   ├── pages/
            │   │    ├──Home/
            │   │    ├──About/
            │   │    └── Dashboard/
            │   ├── store/
            │   │    ├──slices/
            │   │    └──index.js
            │   ├── routes/
            │   │    ├──privateRoutes.js
            │   │    ├──publicRoutes.js
            │   │    └──index.isx
            │   ├── services/
            │   │    ├──authService.js
            │   │    └──userService.js
            │   ├── config/
            │   │    ├──axios.js
            │   │    ├──env.js
            │   │    └──theme.js
            │   ├── types/
            │   │    ├──user.js
            │   │    └──auth.js   
            │   ├── App.js   
            │   ├── index.js
            │   └── reportWebVitals.js
            ├── package.json    
            └── README.md 


backend 
    framework: laravel 
    language: PHP

    lệnh:
        - khởi tạo :            composer create-project laravel/laravel backend
        - truy cập vào backend: cd backend
        - Khởi chạy:            php artisan serve
    Struct:
    model: 
        User
        Category
        Product
        ProductImage
        Cart
        CartItem
        Order
        OrderItem
        Payment
        ShippingMethod
        Review
        Address
        Discount
        Wishlist
        Notification
        php artisan make:model ModelName

 
# GIT AND GITHUB

- git init : dự án hiện tại lên đám mây
- git status: trạng thái của dự án.
- git add: Chuẩn bị lưu lại file đó
- git add . :Chuẩn bị lưu lại toàn bộ file.
- git reset: Không chuẩn bị lưu lại file.
- git commit: Chính thức lưu và ghi chú lại.
- git log: Coi lại thời điểm đã lưu.
- git log —oneline: Coi lại thời điểm đã lưu nhưng rút gọn.
- git checkout {branch name}: Quay lại id hoặc branch của dự án.
- git branch: Kiểm tra các branch.
- git checkout -b {branch name}: Tạo branch mới.
- git merge {branch name}: Tổng hợp các file của branch.
- git branch -d {branch name}: Xóa branch.
- git clone {url repo} : Lấy file từ remove về local.
- git push: đẩy từ local lên remove.
- git push -u origin {branch name}: Đẩy branch lên github.


# Tạo database trong laravel
B1: Tạo Migration
    php artisan make:migration create_products_table
    định nghĩa bảng
    Tạo bảng :  php artisan migrate
    
B2: Tạo model
    php artisan make:model Product

B3: Nhập dữ liệu
    Tạo seeder: php artisan make:seeder ProductSeeder
    Chạy seeder: php artisan db:seed --class=ProductSeeder



#Qui tắt đặt tên biến :
Số ít: Dùng cho Model (Product, Order, User)

Số nhiều: Dùng cho tên bảng trong Database (products, orders, users)

Snake_case: Dùng cho tên cột trong Database (user_id, created_at)

CamelCase: Dùng cho tên biến trong PHP ($productName, $orderStatus)



                                                CREATE DATABASE database_ecommerce;
                                                USE database_ecommerce;

                                                -- Bảng người dùng
                                                CREATE TABLE users (
                                                    id INT AUTO_INCREMENT PRIMARY KEY,
                                                    name VARCHAR(100) NOT NULL,
                                                    email VARCHAR(100) UNIQUE NOT NULL,
                                                    password VARCHAR(255) NOT NULL,
                                                    role ENUM('customer','manage','admin') DEFAULT 'customer',
                                                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                                                );

                                                    -- Bảng danh mục sản phẩm
                                                    CREATE TABLE categories (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        name VARCHAR(255) NOT NULL,
                                                        description TEXT
                                                    );

                                                    -- Bảng sản phẩm
                                                    CREATE TABLE products (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        name VARCHAR(255) NOT NULL,
                                                        description TEXT,
                                                        price DECIMAL(10,2) NOT NULL,
                                                        category_id INT,
                                                        stock INT DEFAULT 0,
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (category_id) REFERENCES categories(id)
                                                    );

                                                    -- Bảng hình ảnh sản phẩm
                                                    CREATE TABLE product_images (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        product_id INT,
                                                        image_url VARCHAR(255) NOT NULL,
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
                                                    );

                                                    -- Bảng giỏ hàng
                                                    CREATE TABLE carts (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        user_id INT,
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (user_id) REFERENCES users(id)
                                                    );

                                                    -- Bảng chi tiết giỏ hàng
                                                    CREATE TABLE cart_items (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        cart_id INT,
                                                        product_id INT,
                                                        quantity INT NOT NULL,
                                                        FOREIGN KEY (cart_id) REFERENCES carts(id) ON DELETE CASCADE,
                                                        FOREIGN KEY (product_id) REFERENCES products(id)
                                                    );

                                                    -- Bảng đơn hàng
                                                    CREATE TABLE orders (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        user_id INT,
                                                        total_price DECIMAL(10,2) NOT NULL,
                                                        status ENUM('pending', 'shipped', 'delivered', 'cancelled') DEFAULT 'pending',
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (user_id) REFERENCES users(id)
                                                    );

                                                    -- Bảng chi tiết đơn hàng
                                                    CREATE TABLE order_items (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        order_id INT,
                                                        product_id INT,
                                                        quantity INT NOT NULL,
                                                        price DECIMAL(10,2) NOT NULL,
                                                        FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
                                                        FOREIGN KEY (product_id) REFERENCES products(id)
                                                    );

                                                    -- Bảng thanh toán
                                                    CREATE TABLE payments (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        order_id INT,
                                                        payment_method ENUM('credit_card', 'paypal', 'bank_transfer', 'cod') NOT NULL,
                                                        status ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
                                                        transaction_id VARCHAR(255),
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE
                                                    );

                                                    -- Bảng phương thức vận chuyển
                                                    CREATE TABLE shipping_methods (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        name VARCHAR(100) NOT NULL,
                                                        description TEXT
                                                    );

                                                    -- Bảng đánh giá sản phẩm
                                                    CREATE TABLE reviews (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        user_id INT,
                                                        product_id INT,
                                                        rating INT CHECK (rating BETWEEN 1 AND 5),
                                                        comment TEXT,
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (user_id) REFERENCES users(id),
                                                        FOREIGN KEY (product_id) REFERENCES products(id)
                                                    );

                                                    -- Bảng địa chỉ giao hàng
                                                    CREATE TABLE addresses (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        user_id INT,
                                                        full_address TEXT NOT NULL,
                                                        city VARCHAR(100),
                                                        country VARCHAR(100),
                                                        zip_code VARCHAR(20),
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (user_id) REFERENCES users(id)
                                                    );

                                                    -- Bảng mã giảm giá
                                                    CREATE TABLE discounts (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        code VARCHAR(50) UNIQUE NOT NULL,
                                                        percentage DECIMAL(5,2) NOT NULL,
                                                        expiry_date DATE,
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                                                    );

                                                    -- Bảng danh sách yêu thích
                                                    CREATE TABLE wishlists (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        user_id INT,
                                                        product_id INT,
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (user_id) REFERENCES users(id),
                                                        FOREIGN KEY (product_id) REFERENCES products(id)
                                                    );

                                                    -- Bảng thông báo
                                                    CREATE TABLE notifications (
                                                        id INT AUTO_INCREMENT PRIMARY KEY,
                                                        user_id INT,
                                                        message TEXT NOT NULL,
                                                        status ENUM('unread', 'read') DEFAULT 'unread',
                                                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                                        FOREIGN KEY (user_id) REFERENCES users(id)
                                                    );
